name: Guaranteed Skyline Capture

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  capture:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        run: |
          sudo apt-get update || true
          sudo apt-get install -y \
            chromium-browser \
            imagemagick \
            fonts-dejavu-core

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Puppeteer
        run: npm install puppeteer@19.11.1 --no-fund --no-audit

      - name: Create assets directory
        run: mkdir -p assets

      - name: Take screenshot with reliable capture
        run: |
          node <<"EOF"
          const puppeteer = require('puppeteer');
          const fs = require('fs');
          const { execSync } = require('child_process');

          async function captureSkyline() {
            const browser = await puppeteer.launch({
              executablePath: '/usr/bin/chromium-browser',
              headless: 'new',
              args: [
                '--no-sandbox',
                '--disable-setuid-sandbox',
                '--disable-dev-shm-usage',
                '--enable-webgl',
                '--window-size=1400,800'
              ],
              timeout: 180000
            });

            try {
              const page = await browser.newPage();
              await page.setDefaultNavigationTimeout(180000);
              
              console.log('Trying official Skyline...');
              const success = await tryCapture(page, 'https://git-skyline.huakun.tech/contribution/github/${{ github.repository_owner }}?enableZoom=false&autoRotate=false');
              
              return success;
            } finally {
              await browser.close();
            }
          }

          async function tryCapture(page, url) {
            try {
              await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 120000 });
              await page.waitForSelector('canvas', { visible: true, timeout: 60000 });
              await new Promise(resolve => setTimeout(resolve, 30000));
              await page.screenshot({ path: 'assets/skyline.png' });
              return true;
            } catch (error) {
              console.log(`Failed to capture from ${url}:`, error.message);
              return false;
            }
          }

          // Main execution
          (async () => {
            if (!await captureSkyline()) {
              console.log('Generating fallback image...');
              execSync(`
                convert -size 1400x800 xc:#0d1117 \
                  -fill white -font DejaVu-Sans -pointsize 40 -gravity center \
                  -annotate +0+0 "GitHub Skyline\\nService Temporarily Down\\nLast try: $(date +'%Y-%m-%d %H:%M')" \
                  assets/skyline.png
              `);
            }
          })();
          EOF

      - name: Verify result
        run: |
          ls -la assets/
          [ -s assets/skyline.png ] || exit 1
          file assets/skyline.png

      - name: Commit & Push
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update Skyline view"
          file_pattern: "assets/skyline.png"
