name: Smart Skyline Capture

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  capture:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgbm-dev \
            libxshmfence-dev \
            libglu1-mesa-dev \
            xvfb \
            imagemagick \
            chromium-browser
          npm install puppeteer@19.11.1

      - name: Create assets directory
        run: mkdir -p assets

      - name: Try official Skyline (Primary)
        id: try_skyline
        continue-on-error: true
        run: |
          Xvfb :99 -screen 0 1920x1080x24 -ac +extension GLX +render -noreset 2>/dev/null &
          export DISPLAY=:99

          node <<EOF
          const puppeteer = require('puppeteer');
          (async () => {
            const browser = await puppeteer.launch({
              headless: 'new',
              args: [
                '--no-sandbox',
                '--disable-setuid-sandbox',
                '--disable-dev-shm-usage',
                '--use-gl=egl',
                '--window-size=1920,1080'
              ],
              timeout: 180000
            });

            try {
              const page = await browser.newPage();
              await page.setDefaultNavigationTimeout(120000);
              await page.goto('https://skyline.github.com/${{ github.repository_owner }}/2024', {
                waitUntil: 'domcontentloaded',
                timeout: 120000
              });
              
              await page.waitForSelector('canvas', { timeout: 60000 });
              await new Promise(resolve => setTimeout(resolve, 30000));
              await page.screenshot({ path: 'assets/skyline.png' });
            } finally {
              await browser.close();
            }
          })();
          EOF

      - name: Try alternative service (Secondary)
        if: steps.try_skyline.outcome == 'failure'
        id: try_alternative
        continue-on-error: true
        run: |
          node <<EOF
          const puppeteer = require('puppeteer');
          (async () => {
            const browser = await puppeteer.launch({
              headless: 'new',
              args: ['--no-sandbox'],
              timeout: 120000
            });

            try {
              const page = await browser.newPage();
              await page.setViewport({ width: 1400, height: 800 });
              await page.goto('https://git-skyline.huakun.tech/contribution/github/${{ github.repository_owner }}');
              await page.waitForSelector('canvas', { timeout: 60000 });
              await page.screenshot({ path: 'assets/skyline.png' });
            } finally {
              await browser.close();
            }
          })();
          EOF

      - name: Generate fallback visualization
        if: steps.try_alternative.outcome == 'failure'
        run: |
          convert -size 1400x800 xc:#0d1117 \
            -fill white -pointsize 40 -gravity center \
            -annotate +0+0 "GitHub Skyline\nCurrently Unavailable\nLast updated: $(date +'%Y-%m-%d')" \
            assets/skyline.png

      - name: Optimize image
        run: |
          [ -f assets/skyline.png ] && convert assets/skyline.png -quality 90 -strip assets/skyline.png || true

      - name: Commit & Push
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update Skyline visualization"
          file_pattern: "assets/skyline.png"
