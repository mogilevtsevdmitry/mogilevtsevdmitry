name: Full Skyline Screenshot

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  capture:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgbm-dev \
            libxshmfence-dev \
            libglu1-mesa-dev \
            xvfb \
            imagemagick \
            google-chrome-stable
          npm install puppeteer@19.11.1

      - name: Create assets directory
        run: mkdir -p assets

      - name: Capture full Skyline
        run: |
          # Запускаем виртуальный дисплей с большим разрешением
          Xvfb :99 -screen 0 3840x2160x24 -ac +extension GLX +render -noreset 2>/dev/null &
          export DISPLAY=:99

          node <<"EOF"
          const puppeteer = require('puppeteer');
          const fs = require('fs');

          async function captureFullSkyline() {
            const browser = await puppeteer.launch({
              headless: 'new',
              args: [
                '--no-sandbox',
                '--disable-setuid-sandbox',
                '--disable-dev-shm-usage',
                '--use-gl=egl',
                '--enable-webgl',
                '--enable-accelerated-2d-canvas',
                '--ignore-gpu-blocklist',
                '--window-size=3840,2160',
                '--force-device-scale-factor=2'
              ],
              timeout: 300000
            });

            try {
              const page = await browser.newPage();
              await page.setDefaultNavigationTimeout(300000);
              await page.setViewport({ width: 3840, height: 2160, deviceScaleFactor: 2 });

              console.log('Loading extended Skyline view...');
              await page.goto('https://git-skyline.huakun.tech/contribution/github/${{ github.repository_owner }}?enableZoom=true&autoRotate=false', {
                waitUntil: 'networkidle0',
                timeout: 300000
              });

              console.log('Waiting for full rendering...');
              await page.waitForFunction(() => {
                const canvas = document.querySelector('canvas');
                return canvas && canvas.width > 2000;
              }, { timeout: 180000, polling: 5000 });

              console.log('Extra rendering time...');
              await new Promise(resolve => setTimeout(resolve, 60000));

              console.log('Capturing full screenshot...');
              await page.screenshot({
                path: 'assets/skyline-full.png',
                type: 'png',
                fullPage: true,
                captureBeyondViewport: true
              });

            } finally {
              await browser.close();
            }
          }

          captureFullSkyline().catch(err => {
            console.error('Capture failed:', err);
            process.exit(1);
          });
          EOF

      - name: Crop and optimize
        run: |
          # Обрезаем только снизу (если нужно)
          convert assets/skyline-full.png \
            -crop 100%x70%+0+0 \  # Оставляем 70% высоты
            -resize 50% \
            assets/skyline.png
          
          optipng -o7 assets/skyline.png
          rm assets/skyline-full.png

      - name: Verify result
        run: |
          ls -la assets/
          [ -s assets/skyline.png ] || (echo "Screenshot failed!" && exit 1)
          file assets/skyline.png

      - name: Commit & Push
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update full Skyline view"
          file_pattern: "assets/skyline.png"
