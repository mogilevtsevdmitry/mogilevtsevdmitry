name: 3D Skyline Screenshot

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  capture:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        run: |
          sudo apt-get update
          sudo apt-get install -y libgbm-dev libxshmfence-dev libglu1-mesa-dev xvfb
          npm install puppeteer@19.11.1

      - name: Create assets directory
        run: mkdir -p assets

      - name: Run Xvfb and take screenshot
        run: |
          Xvfb :99 -screen 0 1400x800x24 &
          export DISPLAY=:99
          
          node <<EOF
          const puppeteer = require('puppeteer');
          (async () => {
            const browser = await puppeteer.launch({
              headless: true,
              args: [
                '--no-sandbox',
                '--disable-setuid-sandbox',
                '--disable-dev-shm-usage',
                '--use-gl=egl',
                '--enable-webgl',
                '--enable-accelerated-2d-canvas',
                '--ignore-gpu-blocklist',
                '--window-size=1400,800'
              ]
            });

            try {
              const page = await browser.newPage();
              await page.setViewport({ width: 1400, height: 800 });
              
              console.log('Loading Skyline visualization...');
              await page.goto('https://git-skyline.huakun.tech/contribution/github/${{ github.repository_owner }}?enableZoom=false&autoRotate=false', {
                waitUntil: 'networkidle2',
                timeout: 120000
              });
              
              console.log('Waiting for 3D rendering...');
              await page.waitForFunction(() => {
                const canvas = document.querySelector('canvas');
                return canvas && canvas.width > 100;
              }, { timeout: 120000 });
              
              await new Promise(resolve => setTimeout(resolve, 30000));
              
              console.log('Capturing final screenshot...');
              await page.screenshot({
                path: 'assets/skyline.png',
                type: 'png',
                clip: { x: 0, y: 0, width: 1400, height: 800 }
              });
              
              console.log('Screenshot saved successfully');
            } finally {
              await browser.close();
            }
          })();
          EOF

      - name: Verify screenshot
        run: |
          ls -la assets/
          [ -s assets/skyline.png ] || (echo "Screenshot failed!" && exit 1)
          file assets/skyline.png

      - name: Commit & Push
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update 3D Skyline visualization"
          file_pattern: "assets/skyline.png"
