name: Skyline Screenshot with Waiting

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  capture:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        run: |
          sudo apt-get update || true
          sudo apt-get install -y chromium-browser

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Puppeteer
        run: npm install puppeteer@19.11.1 --no-fund --no-audit

      - name: Create assets directory
        run: mkdir -p assets

      - name: Take screenshot with proper waiting
        run: |
          node <<"EOF"
          const puppeteer = require('puppeteer');
          const fs = require('fs');

          async function capture() {
            const browser = await puppeteer.launch({
              executablePath: '/usr/bin/chromium-browser',
              headless: 'new',
              args: [
                '--no-sandbox',
                '--disable-setuid-sandbox',
                '--disable-dev-shm-usage',
                '--enable-webgl'
              ]
            });

            try {
              const page = await browser.newPage();
              await page.setViewport({ width: 1400, height: 800 });
              
              console.log('Navigating to Skyline...');
              await page.goto('https://git-skyline.huakun.tech/contribution/github/${{ github.repository_owner }}?enableZoom=false', {
                waitUntil: 'networkidle0',
                timeout: 120000
              });

              console.log('Waiting for 3D visualization to load...');
              
              // Ждем появления canvas и его заполнения
              await page.waitForSelector('canvas', { visible: true, timeout: 60000 });
              
              // Дополнительное ожидание для полного рендеринга
              await new Promise(resolve => setTimeout(resolve, 30000));
              
              // Проверяем, что canvas имеет содержание
              await page.waitForFunction(() => {
                const canvas = document.querySelector('canvas');
                if (!canvas) return false;
                
                // Проверка что canvas не пустой
                const ctx = canvas.getContext('2d');
                const imageData = ctx.getImageData(0, 0, 10, 10).data;
                return imageData.some(channel => channel !== 0);
              }, { timeout: 30000 });

              console.log('Capturing final screenshot...');
              await page.screenshot({
                path: 'assets/skyline.png',
                type: 'png',
                fullPage: false,
                quality: 90
              });

              return true;
            } catch (error) {
              console.error('Error during capture:', error);
              return false;
            } finally {
              await browser.close();
            }
          }

          (async () => {
            if (!await capture()) {
              // Fallback на случай ошибки
              const { createCanvas } = require('canvas');
              const canvas = createCanvas(1400, 800);
              const ctx = canvas.getContext('2d');
              
              ctx.fillStyle = '#0d1117';
              ctx.fillRect(0, 0, 1400, 800);
              
              ctx.fillStyle = '#ffffff';
              ctx.font = 'bold 40px sans-serif';
              ctx.textAlign = 'center';
              ctx.fillText('GitHub Skyline', 700, 350);
              ctx.font = '20px sans-serif';
              ctx.fillText('Updated: ' + new Date().toLocaleDateString(), 700, 400);
              
              fs.writeFileSync('assets/skyline.png', canvas.toBuffer('image/png'));
            }
          })();
          EOF

      - name: Verify result
        run: |
          [ -s assets/skyline.png ] || exit 1
          file assets/skyline.png

      - name: Commit & Push
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update Skyline visualization"
          file_pattern: "assets/skyline.png"
