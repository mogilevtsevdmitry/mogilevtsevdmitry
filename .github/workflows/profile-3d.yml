name: Reliable Skyline Capture

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  capture:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        run: |
          sudo apt-get update || true
          sudo apt-get install -y chromium-browser

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install puppeteer@19.11.1 canvas --no-fund --no-audit

      - name: Create assets directory
        run: mkdir -p assets

      - name: Run capture script
        run: |
          node <<"EOF"
          const puppeteer = require('puppeteer');
          const { createCanvas } = require('canvas');
          const fs = require('fs');

          async function captureSkyline() {
            try {
              const browser = await puppeteer.launch({
                executablePath: '/usr/bin/chromium-browser',
                headless: 'new',
                args: [
                  '--no-sandbox',
                  '--disable-setuid-sandbox',
                  '--disable-dev-shm-usage'
                ],
                timeout: 60000
              });

              const page = await browser.newPage();
              await page.setViewport({ width: 1400, height: 800 });
              
              console.log('Loading Skyline page...');
              await page.goto('https://git-skyline.huakun.tech/contribution/github/${{ github.repository_owner }}', {
                waitUntil: 'domcontentloaded',
                timeout: 60000
              });

              console.log('Waiting for content...');
              await page.waitForFunction(() => {
                const bodyText = document.body.textContent;
                return bodyText.includes('GitHub') || bodyText.includes('Skyline');
              }, { timeout: 30000 });

              console.log('Taking screenshot...');
              await page.screenshot({ path: 'assets/skyline.png' });
              await browser.close();
              return true;

            } catch (error) {
              console.error('Capture failed:', error.message);
              return false;
            }
          }

          async function generateFallback() {
            const canvas = createCanvas(1400, 800);
            const ctx = canvas.getContext('2d');
            
            ctx.fillStyle = '#0d1117';
            ctx.fillRect(0, 0, 1400, 800);
            
            ctx.fillStyle = '#ffffff';
            ctx.font = 'bold 40px sans-serif';
            ctx.textAlign = 'center';
            ctx.fillText('GitHub Skyline', 700, 350);
            
            ctx.font = '20px sans-serif';
            ctx.fillText('Updated: ' + new Date().toLocaleDateString(), 700, 400);
            
            fs.writeFileSync('assets/skyline.png', canvas.toBuffer('image/png'));
          }

          (async () => {
            if (!await captureSkyline()) {
              console.log('Generating fallback image...');
              await generateFallback();
            }
            console.log('Process completed');
          })();
          EOF

      - name: Verify result
        run: |
          [ -s assets/skyline.png ] || exit 1
          file assets/skyline.png

      - name: Commit & Push
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update Skyline view"
          file_pattern: "assets/skyline.png"
